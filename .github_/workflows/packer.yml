name: packer
on: 
  push:
    branches:
      - master
      - pakapaka

env:
  PACKER_CACHE_DIR: /home/octo/packer_cache
  CI_LATEST_LAST_PATH: /home/octo/ci-latest-last.json
  CI_IMAGE_LAST_PATH: /home/octo/ci-image-last.txt

jobs:
  build:
    name: packer-build
    runs-on: [self-hosted, linux, kvm-large]
    env:
      PACKER_QEMU_MEM: "30G"
      PACKER_QEMU_SMP: "30"
      PACKER_LOG: '1'
      PACKER_LOG_PATH: '/home/octo/packer.log'
    defaults:
      run:
        working-directory: packer
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 14400
          role-session-name: isucon10-final-${{ github.run_id }}-${{ github.run_number }}
          aws-region: ap-northeast-1

      # for isucon/isucandar, isucon10-portal
      - name: Save deploy key (A)
        run: 'mkdir -p ~/.ssh && touch ~/.ssh/id_ed25519.a && chmod 600 ~/.ssh/id_ed25519.a && echo "${{ secrets.GH_DEPLOY_KEY }}" > ~/.ssh/id_ed25519.a'
      - name: Save deploy key (B)
        run: 'mkdir -p ~/.ssh && touch ~/.ssh/id_ed25519.b && chmod 600 ~/.ssh/id_ed25519.b && echo "${{ secrets.GH_DEPLOY_KEY2 }}" > ~/.ssh/id_ed25519.b'
      - name: Configure SSH and Git for Deploy Key
        run: |
          rm -f ~/.ssh/config || :
          echo "Host github-a" >> ~/.ssh/config
          echo "  HostName github.com" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519.a" >> ~/.ssh/config
          echo "Host github-b" >> ~/.ssh/config
          echo "  HostName github.com" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519.b" >> ~/.ssh/config
          git config --global 'url.git@github-a:isucon/isucandar.insteadof' https://github.com/isucon/isucandar
          git config --global 'url.git@github-b:isucon/isucon10-portal.insteadof' https://github.com/isucon/isucon10-portal
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/isucon/isucon10-final".insteadOf "https://github.com/isucon/isucon10-final"

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.0'

      - run: GO111MODULE=on go get "google.golang.org/protobuf/cmd/protoc-gen-go@v$(git grep -h '//\s\+protoc-gen-go\s\+v' ../|head -n1|cut -dv -f2)"
      - run: GO111MODULE=on go get google.golang.org/grpc/cmd/protoc-gen-go-grpc

      - name: Get protoc version
        id: protoc-ver
        run: echo "::set-output name=ver::$(git grep -h '//\s\+protoc\s\+v' ../|head -n1|cut -dv -f2)"

      - uses: arduino/setup-protoc@v1
        with:
          version: ${{ steps.protoc-ver.outputs.ver }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: make clean
      - run: make clean-output

      - name: Generate cache key
        id: cache_key
        run: echo "::set-output name=content::s3://isucon10-misc/actions_cache/final/packer_${{ hashFiles('packer/files/itamae/cookbooks/langs/versions.rb') }}.tar"

      - name: Use cache
        run: |
          mkdir -p tmp/
          test -n "${{ steps.cache_key.outputs.content }}"
          if aws s3 cp ${{ steps.cache_key.outputs.content }} tmp/actions_cache.tar; then
            tar xf tmp/actions_cache.tar
            rm -f  tmp/actions_cache.tar
          fi

      - name: Save TLS Certificate
        run: |
          echo "${{ secrets.TLS_CERT }}" > files/tls-cert.pem
          echo "${{ secrets.TLS_KEY }}" > files/tls-key.pem

      ################

      - run: make generate
      #- run: make build
      - run: make build-contestant
      - run: make cache
      - run: make build-benchmarker
      - run: make upload
      - run: make cache-contestant-local
      #- run: make build-full
      #- run: make upload-full
      - run: make prune

      - name: Upload cache
        run: |
          mkdir -p tmp/
          tar cf tmp/actions_cache.tar files-cached/
          aws s3 cp tmp/actions_cache.tar ${{ steps.cache_key.outputs.content }}
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: manifest-amd64-contestant.json
      #    path: packer/output/manifest-amd64-contestant.json
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: manifest-amd64-benchmarker.json
      #    path: packer/output/manifest-amd64-benchmarker.json
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: manifest-amd64-full.json
      #    path: packer/output/manifest-amd64-full.json
