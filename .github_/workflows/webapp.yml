name: webapp
on: 
  push:
    branches:
      - master
  pull_request: {}

jobs:
  protoc-check-diff:
    name: protoc-check-diff
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('webapp/frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
        working-directory: webapp/frontend

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          working-directory: webapp/ruby
          bundler-cache: true

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.0'
      - run: GO111MODULE=on go get "google.golang.org/protobuf/cmd/protoc-gen-go@v$(git grep -h '//\s\+protoc-gen-go\s\+v'|head -n1|cut -dv -f2)"
      - run: GO111MODULE=on go get google.golang.org/grpc/cmd/protoc-gen-go-grpc

      - name: Get protoc version
        id: protoc-ver
        run: echo "::set-output name=ver::$(git grep -h '//\s\+protoc\s\+v'|head -n1|cut -dv -f2)"

      - uses: arduino/setup-protoc@v1
        with:
          version: ${{ steps.protoc-ver.output.ver }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
      - run: sudo apt-get install -y --no-install-recommends zsh

      - run: ./bin/xsuportal-protoc.sh
      - run: git add .
      - run: git diff --exit-code

  frontend:
    name: frontend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: webapp/frontend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('webapp/frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: npx webpack --mode production
        env:
          NODE_ENV: production

      - uses: actions/upload-artifact@v2
        with:
          name: frontend-production
          path: webapp/frontend/public/

  ruby:
    name: ruby
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: webapp/ruby
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          working-directory: webapp/ruby
          bundler-cache: true

      - run: "find -name '*.rb' -exec ruby -w -c '{}' ';' > /dev/null"

  rust:
    name: rust
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: webapp/rust
    steps:
      - uses: actions/checkout@v2
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: '1.46.0'
          override: true
          components: rustfmt, clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            webapp/rust/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('webapp/rust/Cargo.lock') }}

      # https://github.com/actions-rs/cargo/issues/6

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        # continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: fmt
          args: --manifest-path webapp/rust/Cargo.toml --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: clippy
          args: --manifest-path webapp/rust/Cargo.toml -- -D warnings

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: test
          args: --manifest-path webapp/rust/Cargo.toml
